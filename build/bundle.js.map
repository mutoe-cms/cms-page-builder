{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/examplePageConfig.ts","../../node_modules/svelte/store/index.mjs","../../src/stores/currentSection.ts","../../src/stores/pageConfig.ts","../../src/utils.ts","../../src/components/SectionOperator.svelte","../../src/components/Button.svelte","../../src/components/fullWidthSectionModules/FullWidthHeader.svelte","../../src/components/FullWidthSection.svelte","../../src/components/PageBuilder.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.4' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n",null,"import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n",null,null,null,"<template>\n  <div class=\"section-operator\" style={styleToString(borderRect)}>\n    <div class=\"border\"></div>\n\n    <div class=\"section-menu\">\n      <button class=\"move\" draggable=\"true\" on:dragend={onDragEnd} on:dragstart={onDratStart}>\n        <ion-icon name=\"move-sharp\"></ion-icon>\n      </button>\n      <button class=\"settings\">\n        <ion-icon name=\"settings-sharp\"></ion-icon>\n      </button>\n      <button class=\"duplicate\" on:click={onDuplicate}>\n        <ion-icon name=\"duplicate-sharp\"></ion-icon>\n      </button>\n      <button class=\"delete\" on:click={onDelete}>\n        <ion-icon name=\"trash-sharp\"></ion-icon>\n      </button>\n    </div>\n\n    <button class=\"add-section\">\n      <ion-icon name=\"add-sharp\"></ion-icon>\n    </button>\n  </div>\n\n  <div class=\"drag-over-placeholder\"\n    style={styleToString({...dragOverRect, height: dragOverPlaceholderHeight + \"px\"})}></div>\n</template>\n\n<script lang=\"ts\">\nimport { cloneDeep, generateId, styleToString } from 'src/utils'\nimport { createEventDispatcher } from 'svelte'\nimport { currentDragOverSection, currentDragSection, currentSection } from '../stores/currentSection'\nimport { pageConfig } from '../stores/pageConfig'\n\nconst dragOverPlaceholderHeight = 48\n\nlet borderRect: Partial<CSSStyleDeclaration> = {\n  top: '0',\n  height: '0',\n  opacity: '0',\n}\nlet dragOverRect: Partial<CSSStyleDeclaration> = {\n  top: '0',\n  opacity: '0',\n}\n\ncurrentSection.subscribe(section => {\n  if (!section || $currentDragSection) return borderRect = {}\n\n  dragOverRect = {}\n  const element = document.querySelector(`#section-${section.id}`) as HTMLElement\n  borderRect = {\n    top: element.offsetTop + 'px',\n    height: element.offsetHeight + 'px',\n    opacity: element ? '1' : '0',\n  }\n})\ncurrentDragOverSection.subscribe(({ section, isTop }) => {\n  if (!section || !$currentDragSection) return dragOverRect = {}\n\n  const element = document.querySelector(`#section-${section.id}`) as HTMLElement\n  let offsetTop = element.offsetTop\n  if (!isTop) offsetTop += element.offsetHeight - dragOverPlaceholderHeight\n  dragOverRect = {\n    top: offsetTop + 'px',\n    opacity: '1',\n  }\n})\n\nfunction onDuplicate() {\n  pageConfig.update(config => {\n    const targetIndex = config.sections.findIndex(it => it.id === $currentSection?.id)\n    if (targetIndex === -1) return config\n    let regularSection = cloneDeep(config.sections[targetIndex])\n    regularSection.id = generateId()\n    config.sections.splice(targetIndex, 0, regularSection)\n    return config\n  })\n}\n\nfunction onDelete() {\n  pageConfig.update(config => {\n    const targetIndex = config.sections.findIndex(it => it.id === $currentSection?.id)\n    if (targetIndex === -1) return config\n    config.sections.splice(targetIndex, 1)\n    borderRect = {}\n    return config\n  })\n}\n\nconst dispatch = createEventDispatcher()\n\nasync function onDratStart(event: DragEvent) {\n  let sectionElement = document.querySelector(`#section-${$currentSection?.id}`)\n  event.dataTransfer.setDragImage(sectionElement, 0, 0)\n  setTimeout(() => {\n    dispatch('dragstart', $currentSection)\n  })\n}\n\nfunction onDragEnd() {\n  dispatch('dragend')\n}\n\n</script>\n\n<style lang=\"scss\">\n.section-operator {\n  position: absolute;\n  right: 0;\n  left: 0;\n  opacity: 0;\n  transition: all .2s ease-out;\n  pointer-events: none;\n\n  .border {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    pointer-events: none;\n    border: 4px solid #2b87da;\n  }\n\n  .section-menu {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: flex;\n    padding: 4px;\n    background-color: #2b87da;\n    pointer-events: auto;\n    border-radius: 3px;\n\n    button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: #fff;\n      font-size: 24px;\n      background: transparent;\n      border: none;\n\n      &.move {\n        cursor: move;\n      }\n    }\n  }\n\n  .add-section {\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    width: 40px;\n    height: 40px;\n    margin-bottom: -19px;\n    margin-left: -20px;\n    padding: 0;\n    color: #fff;\n    font-size: 30px;\n    background-color: #2b87da;\n    transition: all .2s;\n    pointer-events: auto;\n    border: none;\n    border-radius: 40px;\n\n    &:hover,\n    &:focus {\n      transform: scale(1.2, 1.2);\n    }\n  }\n}\n\n.drag-over-placeholder {\n  position: absolute;\n  right: 0;\n  left: 0;\n  background-color: rgba(#fff, .2);\n  transition: all .2s ease;\n}\n</style>\n","<template>\n  {#if link}\n    <a class=\"button\" href={link}>\n      {text}\n      <ion-icon name=\"chevron-forward-outline\"></ion-icon>\n    </a>\n  {:else}\n    <button class=\"button\">\n      {text}\n      <ion-icon name=\"chevron-forward-outline\"></ion-icon>\n    </button>\n  {/if}\n</template>\n\n<script lang=\"ts\">\nexport let text: string\nexport let link: string\n</script>\n\n<style lang=\"scss\">\n.button {\n  position: relative;\n  display: inline-block;\n  margin: 0 0.5em 0 0;\n  padding: .3em 1em;\n  color: inherit;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.7em;\n  white-space: nowrap;\n  text-decoration: none;\n  text-shadow: none;\n  background-color: transparent;\n  transition: all .2s;\n  border: 2px solid;\n  border-radius: 3px;\n  cursor: pointer;\n  outline: none;\n\n  ion-icon {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    opacity: 0;\n    transition: all .2s;\n    height: unset;\n    font-size: 120%;\n    right: 0;\n    width: 0;\n  }\n\n  &:hover,\n  &:focus {\n    padding: .3em 1.8em .3em .7em;\n    background-color: hsla(0, 0%, 100%, .2);\n    border-color: transparent;\n\n    ion-icon {\n      opacity: 1;\n      right: 0.3em;\n      width: 1em;\n    }\n  }\n\n}\n</style>\n","<template>\n  <div class=\"full-width-header\" style={styleToString(module.style)}>\n    <div class=\"full-width-container\">\n      {#if module.title}\n        <h2>{module.title}</h2>\n      {/if}\n\n      {#if module.subTitle}\n        <h3>{module.subTitle}</h3>\n      {/if}\n\n      {#if module.body}\n        <div class=\"body\">{module.body}</div>\n      {/if}\n\n      {#if module.button1}\n        <Button {...module.button1} />\n      {/if}\n      {#if module.button2}\n        <Button {...module.button2} />\n      {/if}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { styleToString } from 'src/utils'\nimport Button from '../Button.svelte'\n\nexport let module: UI.FullWidthHeaderModule\n</script>\n\n<style lang=\"scss\">\n.full-width-header {\n  color: #fff;\n  padding: 64px;\n\n  h2 {\n    margin-bottom: 16px;\n  }\n\n  .body {\n    margin-bottom: 24px;\n  }\n}\n</style>\n","<template>\n  <section id=\"section-{section.id}\" on:mouseenter={onMouseEnter}>\n    {#if module.type === 'full-width-header'}\n      <FullWidthHeader {module} />\n    {/if}\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport { currentSection } from '../stores/currentSection'\nimport FullWidthHeader from './fullWidthSectionModules/FullWidthHeader.svelte'\n\nexport let section: UI.FullWidthSection\nconst module = section.module\n\nfunction onMouseEnter() {\n  currentSection.set(section)\n}\n</script>\n\n<style lang=\"scss\"></style>\n","<template>\n  <div class=\"page-builder\">\n    <div class=\"section-container\"\n      on:dragenter={onDragEnter}\n      on:dragleave={onDragLeave}\n      on:dragover={throttle(onDragOver, 100)}\n      on:drop={onDrop}>\n      {#each $pageConfig.sections as section (section.id)}\n        {#if section.type === 'full-width'}\n          <FullWidthSection section={section} />\n        {/if}\n      {/each}\n    </div>\n\n    <SectionOperator on:dragend={onDragEnd} on:dragstart={onDragStart} />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { onMount } from 'svelte'\nimport examplePageConfig from '../examplePageConfig'\nimport { currentDragOverSection, currentDragSection, currentSection } from '../stores/currentSection'\nimport { pageConfig } from '../stores/pageConfig'\nimport SectionOperator from './SectionOperator.svelte'\nimport FullWidthSection from './FullWidthSection.svelte'\nimport { throttle } from '../utils'\n\npageConfig.set(examplePageConfig)\n\nonMount(() => {\n  document.addEventListener('dragover', e => void e.preventDefault())\n})\n\nfunction onDragStart(event: CustomEvent<UI.Section>) {\n  const index = $pageConfig.sections.findIndex(it => it === event.detail)\n  currentDragSection.set($pageConfig.sections[index])\n  currentSection.set(null)\n  pageConfig.update(config => {\n    config.sections.splice(index, 1)\n    return config\n  })\n}\n\nfunction onDragEnd(event: CustomEvent) {\n  event.preventDefault()\n\n  let insertIndex = $pageConfig.sections.findIndex(it => it.id === $currentDragOverSection.section.id)\n  if (!$currentDragOverSection.isTop) insertIndex += 1\n  pageConfig.update(config => {\n    config.sections.splice(insertIndex, 0, $currentDragSection)\n    return config\n  })\n  currentDragSection.set(null)\n}\n\nfunction onDragEnter(event: DragEvent) {\n  console.log(event)\n}\n\nfunction onDragOver(event: DragEvent) {\n  const sectionElement = (event.target as HTMLElement)?.closest('section')\n  const topThreshold = sectionElement.offsetTop + sectionElement.offsetHeight / 2\n  const isTop = event.clientY < topThreshold\n  const sectionId = sectionElement?.id.replace(/^section-/, '')\n  const section = $pageConfig.sections.find(it => it.id === sectionId) ?? null\n  currentDragOverSection.set({ section, isTop })\n}\n\nfunction onDragLeave(event: DragEvent) {\n  console.log(event)\n}\n\nfunction onDrop(event: DragEvent) {\n  console.log(event)\n}\n</script>\n\n<style lang=\"scss\">\n.page-builder {\n  position: relative;\n}\n</style>\n",null],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_custom_element_data","prop","set_data","wholeText","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","get_spread_object","spread_props","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","examplePageConfig","id","sections","module","title","subTitle","body","button1","button2","link","style","backgroundColor","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","currentSection","currentDragSection","currentDragOverSection","section","isTop","pageConfig","styleToString","styleObject","entries","v","replace","match","toLowerCase","join","throttle","wait","timer","firstInvoke","apply","arguments","setTimeout","clearTimeout","height","dragOverPlaceholderHeight","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","rejected","result","done","borderRect","top","opacity","dragOverRect","$currentDragSection","querySelector","offsetTop","offsetHeight","dispatch","config","targetIndex","findIndex","it","$currentSection","regularSection","JSON","parse","stringify","Math","abs","sin","Date","getTime","toString","sectionElement","dataTransfer","setDragImage","onDragEnter","onDragLeave","onDrop","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","will_move","did_move","first","new_block","old_block","new_key","old_key","console","log","preventDefault","$pageConfig","insertIndex","$currentDragOverSection","_a","_b","closest","topThreshold","clientY","sectionId","find"],"mappings":"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"}